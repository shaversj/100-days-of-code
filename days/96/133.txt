00:00:00 Michael Kennedy: This episode, it's all about developer productivity, from continuous learning to Git source control tips to tools and books for developers, Jay Miller from the Productivity in Tech Podcast is here to share his experiences. This is Talk Python to Me, episode 133 recorded September 17th, 2017. Welcome to Talk Python to Me, a weekly podcast on Python, the language, the libraries, the ecosystem and the personalities, this is your host Michael Kennedy. Follow me on Twitter, where I'm @mkennedy. Keep up the show and listen to past episodes @talkpython.fm and follow the show on Twitter via @talkpython. This episode's brought to you by Linode and GoCD. Be sure to check out what they're offering during their segments, it really helps support the show. Before we get to the interview with Jay, I have something cool to tell you about. Most of you are aware of my courses at training at talkpython.fm but starting today, I'm trying a new experiment: I'm offering some free, shorter courses. Check out freemongodbcourse.com to get free access to my brand-new 2 1/2 hour MongoDB course called MongoDB Quickstart, no strings attached. You just sign up, it's free, you'll learn how to get started with MongoDB and MongoEngine from Python and we'll build an Airbnb knockoff so you can have some realistic data models to explore. Let me know what you think this experiment of offering shorter free courses paired with my larger, more in-depth paid courses, just visit freemongodbcourse.com and sign up right now, okay, signed up? Great, then let's chat with Jay. Jay, welcome to Talk Python. - Hey, how's it going?
 
00:01:38 Jay Miller: Hey, how's it going?
 
00:01:40 Michael Kennedy: It's really great, it's great to have you on the show. You and I have exchanged some conversations on Twitter. We've talked a bit about launching your website and podcast and you had me on your podcast, which we're going to talk about in depth in some parts. So I'm super excited to return the favor and have you back on Talk Python because there's a ton of cool developer productivity stuff to share.
 
00:02:04 Jay Miller: Absolutely, and I enjoyed our conversation and I have to tell your listeners if it wasn't for, not only your podcast, but me stealing time from you every once in a while, I wouldn't have a podcast so big thanks that.
 
00:02:17 Michael Kennedy: That's great to hear that I helped you out. That's awesome and you're doing a really good job with it so we'll get into that, before we do, what's your story? How'd you get into programming and get interested in Python?
 
00:02:25 Jay Miller: So so interesting enough, I went to school to be a computer engineer and that lasted about one semester. I realized I did not want to be a computer engineer. I wanted to specialize in hardware and, yeah, that changed quickly so for a while, kids don't do this, but I dropped out of college. I was working as a web designer/developer-ish. I had a few clients, I think the largest gig I had was like a $10,000 company website redesign, which was for an 18-year-old, that's absolutely phenomenal.
 
00:02:59 Michael Kennedy: Yeah, that crushes it, I mean when I was 18, I was I think probably, I think at that time, I was probably building decks or something like this and not particularly make a lot of money, so that makes it hard to go back to college, right?
 
00:03:13 Jay Miller: Well, it was definitely a challenge being a young adult, in the literal sense, a young adult, I ran into some issues, just life lessons and I wound up joining the military. I got out of the military and picked up a system administrator job because that's what I did while I was in the military and I wasn't satisfied. And I don't know, I wanted to revisit this computer, like going beyond, hey, did you try restarting it? And--
 
00:03:41 Michael Kennedy: How many times?
 
00:03:44 Jay Miller: At least twice.
 
00:03:44 Michael Kennedy: Three times.
 
00:03:47 Jay Miller: But what I got to was I didn't want to necessarily make the hardware but I did want to make it sing and that was, I used to be a guitarist and that was like, I grew up on a blues infested area, in a jam band infested area and a lot of musicians will say, "You got to make the guitar sing," and that's what I wanted to do with with my computer. I wanted to build things that were, you know, when people saw it they go, "Wow, thats awesome!" And I tried every programming language I could think of, all the basics, I started with Ruby, I went to JavaScript and Ruby it was okay and JavaScript was confusing and then I said, hey, I'm going to figure something out, so I jumped into Python. At that time I joined my first online community to learn how to program and the rest is history. It's been five years of just nonstop Python after that.
 
00:04:34 Michael Kennedy: Yeah, that's really cool and you're doing things like Flask and are you also doing MongoDB?
 
00:04:38 Jay Miller: Yeah, yeah, doing Flask and MongoDB right now.
 
00:04:41 Michael Kennedy: Yeah, yeah, that's definitely fun technologies. Well, really cool, really cool, I completely connect with this idea of like I want to make the computer sing. I mean there's so much incredible technology around us. We have the internet, the web, apps just the desktops and everything and like being just a consumer of it seems so like you're just missing out on so much of it, right?
 
00:05:05 Jay Miller: There are so many times that I see something that I've purchased through the app store or I just online and I go, wow, I really wonder how they made that? And that is becoming less and less now. I can really started to think about how they did make those things and then I try to make my own, just for fun.
 
00:05:23 Michael Kennedy: Yeah, that's great, that's really, really nice. I think one of the actually cool way so in programming is to pick something you see and go, I'm going to try to build like a knockoff of that, not to release it but just to see what the experience is like, that's fun. So let's talk about productivity and your project PIT. Tell us a little bit about what it is.
 
00:05:42 Jay Miller: Productivity in Tech started last year as just a podcast. One of the things that I had learned about myself is the only thing I liked more than computers was doing a good job and in having others, and I'll say that I did have, I have a lot of social anxiety and self-esteem issues that I'm dealing with now that PIT has helped with, but because of that, I always wanted to do the best job that I could for others. And when I got out of the military, I struggled a lot and I thought I was going to get fired from my first job. In the military, you can't get you fired so you when you get that corporate job, your only fear is I'm just married, I'm starting a life, you know, for my family. I have do a good job, and I kind of created this system for myself and I don't want to bore you with the details on that, but in the end, when I started looking at the different techniques that I was implementing, I learned that they had names. There are things like the Eisenhower Matrix and GTD. I didn't know about these things before, so I really wanted to learn as much as I could and develop my own systems, kind of like when I mentioned before, when you see the apps and you just go, "Wow, I really want to do something like that for myself," well, that was Productivity in Tech. It was me coming up with ways to make others better just as I had helped to make myself better and I did that by the only way that I knew how. I've always been a talker. I've always been someone that can strike up a conversation with anyone so I got online, I said, hey, I'm doing a handler podcast about the everyday person and how they're productive and the phenomenal people and how they're productive and I want to meet somewhere in the middle and figure that out.
 
00:07:30 Michael Kennedy: Yeah, for sure, how much of this was inspired by you seen people who are doing just incredible amounts of productive things? So a couple examples come to mind really quick, like on Python Bytes, we covered what Kenneth Reitz did last week and that was like four or five projects that were released . What do you think about people like Elon Musk? Yeah, it's like, well, we're going to start a space company and a car company, why not, right? How much of it was inspired by like those things and how much of it was just like, I'm not feeling like my effort day-to-day is generating stuff, right? Like I feel like I'm spending all my time on email and I'm never getting anything done, like what was the genesis there?
 
00:08:14 Jay Miller: I think the biggest was my own frustrations with myself and finding ways to improve myself. And I always reach for the people that I want to emulate and we all want to build the next Boring Company or the next Tesla but I had to be realistic and I think that's where a lot of people in the productivity space fail. They can tell you how to be productive as a productivity guru; they're going to tell you how productivity gurus are productive. They can't tell you how a software developer is productive. They can't tell you how a system administrator is productive so I wanted to find the people in those fields, the people that would say I'm an equal or one step above where I am now and learn how they are productive. That way, I can actually apply that to my day-to-day.
 
00:09:00 Michael Kennedy: I think that makes a lot of sense, like the specialization and trying to connect with somebody working in your space, like connecting with the developer who's figuring out these things to work on other things and not somebody who spends most their time coaching executives things like that, right? I mean that's fine and all but that's not necessarily going to help you be more productive with Git, for example.
 
00:09:21 Jay Miller: Not all.
 
00:09:21 Michael Kennedy: Yeah, not at all. I want to save the actual podcast, some conversation about some of the particular podcast for later, but what are some of the things that you've learned from doing Productivity in Tech that have helped you, that maybe really resonated with you?
 
00:09:38 Jay Miller: A lot of it is just the differences in what productive looks like. For instance, when you look at people like Mike Rohde who is a software consultant/Sketchnote master, he had an issue with writing long detailed notes, so for him, the best productive method was simplifying it and going to this, I'm going to draw very few things in permanent marker and they're going to be rough. They're going to be down and dirty but they're going to help me retain information and the other idea is just the sense of being a real developer. To this day, I have never had a official software developer role. That's actually my next goal is to transition into that space and to become a software developer, but when I look at the things that I've done, building a podcast as we'll probably talk about later, building it all from scratch, running Python and Flask and MongoDB, a lot of people look at the things that I've done and said, "You've been a real developer for a couple years now," and that's very rewarding, and seeing that you don't necessarily have to have the job title to have the knowledge and the skill set and to have people that do have the title acknowledge me as a peer, that's just very, very rewarding.
 
00:11:01 Michael Kennedy: Yeah, yeah, that's really awesome, so day-to-day, you're still doing a little more system admin type stuff but when you come home and get to do whatever you want to work on, that's a little more web development type things, is that right?
 
00:11:13 Jay Miller: Absolutely, there's I think we're on like the fourth consecutive week that there's been a change on the website, either a visual change or a code change. This week, there was both so, yeah, I go home and it's like my second job starts.
 
00:11:30 Michael Kennedy: Yeah, it's tough to find that energy to keep going, like what motivates you to do that? Because I know a lot of times you come home from work and it's been a long day, there's traffic and you're just like, "I just need to sit for a while," and then you've got to do the dishes and you're like, "Now I'm really done," so where do you find the energy and the motivation to do these two things in parallel?
 
00:11:52 Jay Miller: A lot of it is just because it's fun. I think that that is a really big piece of the puzzle. If you're not having fun with what you're doing, then figure out a way to either make it fun or stop doing it but the other part of it is I know what my goal is. This year, I've set some pretty interesting goals and we're coming to the end of the year now and a few of them haven't been met yet but I know I'm still working on them. I'm making forward progress and as long as I can continue to make forward progress, I'm happy. But I do know that when you're tired and you're frustrated, sometimes you have to take a break but then other times, you have to remember why am I tired, why am I frustrated, and how do I fix that? And part of it is, hey, I'm going to build PIT into this large community that, who knows? Maybe one day that will be my job.
 
00:12:39 Michael Kennedy: Yeah, absolutely, it totally could. I mean you're definitely growing it in a great way and I think there's this, you know, we often get told to pursue our passion and follow the things that we are like our hobbies or whatever and there's some truth and value to that but there's just a lot of joy from actually like taking something that I'm good at and finding a way to provide that to the world, right? And that becomes fun and it becomes amazing, even if it wasn't necessarily like what you did in your spare time originally or something, right? So I think there's a lot of to motivate people there.
 
00:13:16 Jay Miller: Absolutely, and if you're not doing something that's fun or challenging to yourself, then say no to some of the things that aren't and just start doing them 'cause it's extremely rewarding.
 
00:13:25 Michael Kennedy: Yeah, absolutely, all right, so that's a good place to segue into a couple of your tips. Let's go with 10 of your tips for developer productivity. So let's just, you gave me a nice list here. Let's just go down the list, some of these are very technical, some of these are more soft skills like say no, for example, things like that, right? So what do you got?
 
00:13:42 Jay Miller: Well, the one that I've learned the most recently is embrace git fetch, and I say that kind of as a reminder to me to look before you leap. A lot of times, I will go, oh, this is going to be easy, blah, blah, blah, blah, and then I basically open my mouth faster than my brain thinks and then I start working on it and it's like, oh, no, I probably shouldn't have done this to myself, so taking the time to look and examine what is actually happening and what will be required of you, in this case, kind of like how you would use git fetch instead of git pull, that way you can see the changes that have been made so you don't make bigger mistakes, that can really help.
 
00:14:21 Michael Kennedy: Yeah, that's for sure. The more you work in a team, things like git fetch to see what the consequences of doing the latest is going to do. It's really interesting and definitely branches, feature branches, I think are really awesome for this kind of stuff, you want to something out? Take the moment to think ahead and create a branch that's like, I'm going to try this thing out, branch, and if you like into a PR or merge it back, but you don't have to like commit to breaking your code. You can always roll it back but you might want to save it or you might want to slowly evolve it or whatever.
 
00:14:54 Jay Miller: I've definitely made my own local test this branch and they rarely make it into master but when they do, I'm really happy that I split it out first.
 
00:15:04 Michael Kennedy: Yeah, absolutely, so one that you did bring up and I think the more successful you are as a developer, the worse that this plagues you. You say try to say no to more.
 
00:15:18 Jay Miller: Absolutely, and I'm sure we'll talk about this later too but I'm actually working on a course about this. A lot of people are eager, especially in the junior developer role, where I am looking now, just for any kind of developer role, it's, oh, can you do this, can you do this, can you do this? You see all of these different items and it kind of goes in with another idea of specializing but if you try to do everything, it's kind of like that, I forgot what that saying, you know, be a master of one and not a generalist.
 
00:15:51 Michael Kennedy: Yeah.
 
00:15:51 Jay Miller: Like focus on one thing and then basically tune out everything else. I've had people go, "Oh, how come you don't use Pelican?" or "How come you don't use Pyramid?" Or "How come you don't use Django?" And it's like it's not that I don't want to use those things, it's just right now I'm focusing on the things that I am using so I'm going to say no to completely like porting my code over to Django and I'm going to say no to porting it over the React or React Native and I'm just going to focus on what I'm currently doing.
 
00:16:17 Michael Kennedy: Yeah. That's a good point and I find, like I'm super susceptible to this 'cause I like to help people out and I don't like to say no in particular, so if I can someone and I can do a quick, it's fine. But a lot of times, I'll end up committing to projects that actually turn out to be bigger than I thought they were and then I end up, honestly, doing not as good of a job for all the projects I'm involved in, so it's really hard to say say no some of the time but if really stay focused is the goal, right? If you've got a goal, go for it.
 
00:16:50 Jay Miller: Absolutely, and there's nothing wrong with helping others. I think one of the best examples of this is imagine that you're in a plane that's about to go down. The first thing they always say to do when the little masks come down is to put the mask over your own face because if you spend all your time trying to put a mask on someone else's face, you'll probably black out, pass out and then die in the fire so you need to make sure that you're taken care of before you go out and expend all of your energy trying to help others, not to say that you shouldn't help them but make sure that you're in a position to where you can actually help them.
 
00:17:24 Michael Kennedy: Yeah, that's a good analogy; I like it. So another one that you have is to specialize and this this is a little bit like that I want when I'm getting started, I want to just say yes to any product and help anything and do whatever I can. You said with Django and Flask or Django and Pyramid and all the different technologies you named, it seems valuable to learn all those different technologies, right?
 
00:17:49 Jay Miller: Yeah, I mean it is valuable to have an understanding of them, I mean I can put up a site in Pelican. I have a site that's built in Pelican but I'm not spending hours upon hours each day trying to figure how to make the best Pelican site ever. Instead, I'm focusing on the stacks that I use and the stacks that really help me to achieve the goals that I have, which right now, are Flask and Mongo. So when when I learned something new in Mongo, when I learn about pagination, when I learn about creating forms or processing credit card information, these are all things that I need to focus on and if I try to learn absolutely everything else in the development space, I could miss out on some of the things that could really actually be beneficial to me.
 
00:18:36 Michael Kennedy: Yeah, it's a good point, it's like on one hand, there is a certain, certainly alot benefit to having a broad skill set and people should have a broad skill set but there should be something that you're really good at and that can be kind of what you lever off of, right? So if a little bit of Django, a little bit of Flask, a little bit of Pyramid, a little SQLAlchemy, a little Mongo, and somebody says, "Hey, I need to hire somebody, I need to find somebody who can really solve this problem or have a performance in SQLAlchemy," like they're not going to go to the guy or girl who knows a little bit about SQLAlchemy. They're going to go to the person who knows a whole lot about it, you know, Mike Bayer, the guy who created it or some other people who like really do a lot of stuff in that, right? This portion a talk by the enemy is brought to you by the Linode, are you looking for bulletproof hosting that fast, simple and incredibly affordable? Look past that bookstore and check out Linode at talkpython.fm/Linode, L-I-N-O-D-E. Plans start at just $5 a month for a dedicated server with a gig of RAM, they have 10 data centers across the globe, so no matter where you are, there's a data center near you, whether you want to run your Python web app, host a private git server or a file server, you'll get native SSDs on all machines, a newly upgraded 200 gigabit network and 24/7 friendly support, even on holidays and a seven-day money-back guarantee. Want a dedicated server for free for the next four months? Use the coupon code python17 at talkpython.fm/linode. There's a really interesting analogy that John Sonmez gave him my show I had a back, I think it was Episode 71 and know he was on your show as well. He said like, "Look, if you get arrested for murder you want the lawyer that does murder trial, murder criminal defense trials." You don't want the divorce lawyer that sometimes maybe also studied criminal law. You want the person who just does that, right? And I think if you're really trying to like lever your career up another notch, having one of those things where if you need this, you go to you, right? That's really powerful, then you broaden out from there.
 
00:20:47 Jay Miller: Absolutely, and that's not to say that shut the window on everything else either because there have been times where I've looked at, for instance, right now, I'm looking at building an app in Swift and it's kind of like a little side project to help me forget about things whenever I'm banging my head against the wall but as I learn other things with just the intention of like, okay, now how can I apply this to the thing that I'm really, really good at? How can I take the lessons I learned in Swift or the lessons I've learned? I go to a monthly JavaScript meetup just so I can go, I think I do this in Python and it's actually a little bit better and then go and do that thing, not to say JavaScript's bad or anything but there have definitely been moments where I go, I wonder how to how I can apply this to my existing projects so that I'm better in the areas that I'm really trying to excel in.
 
00:21:40 Michael Kennedy: Yeah, it's a huge tension between getting better, the thing you're good at and that you're really doing versus broaden it out so that you can reapply it to that, right, so very cool. So that kind of leads us into another one of your suggestions is always be learning.
 
00:21:55 Jay Miller: Absolutely.
 
00:21:55 Michael Kennedy: I totally agree with this, yeah.
 
00:21:56 Jay Miller: So for those that haven't talked with me ever, one of the things that most people don't know about me is I'm also a licensed minister. I don't practice but I am licensed and I did study some ministry a little bit, not formally at the collegiate level, but I've been under the tutelage of of other ministers and, for me, I've always, people have always said they love my sermons because I always come from left field and a lot of people think that's weird. It's like you could be talking about something and then all of a sudden, you're like, oh, that reminds me of this one time and you say is really austere, you tell this story that's just like what? But at the same time, if you are going through your life experiences and you go, what can I learn from that? What experience can I learn from this conversation that I'm having with Michael right now? That's one of the things I love about the podcast. With PIT, I'm learning from my guest. I never try to be the central topic. I don't want them to talk about me. I want to talk about them because I want to learn from their experiences.
 
00:23:03 Michael Kennedy: Yeah. I totally agree with you on the podcast bit. I feel like I'm the the first most honored guest 'cause I actually get to ask the questions, it's awesome. But I feel like always learning is super important. Like you said, you go to the JavaScript meetups just to get a different angle and and things like that. I definitely attribute much of my success as a developer from the fact that probably almost every week, I was either reading a book or taking an online course or doing something to just say, all right, what new thing can I learn this week and how does it apply to what I've been doing? And it seems so small, right, like, oh, I could do this loop better or I could access the database this way or whatever, but if you do that every week for years, it really, really adds up.
 
00:23:52 Jay Miller: Definitely and you kind of hit a good point there, that you're not learning all the time through the same method, you're not saying: I'm just going to go do a podcast and whatever I learn other than the podcast, that's it. No, you're working on projects. You're reading books, you're helping others. One of the best ways to learn is to actually teach. You're building courses, I'm sure you've learned a lot just doing courses, I know I have.
 
00:24:15 Michael Kennedy: Yeah, absolutely, so another thing that's really powerful and it works in both directions, I think, you say there's mentorship and accountability. Mentorship is definitely really important for new people but it could be your experience and you're helping a new person or you could be that a person receiving help.
 
00:24:32 Jay Miller: And the best part is sometimes you're both and that is always interesting. That's one of the reasons why Productivity in Tech made the change from just a podcast to a community. One of the things that we heard a lot was the people you have on the show are great but it's really hard to just say, I'm going to do that thing and then stick to it. Well, that's why we have our Slack channel that we we hold each other accountable. We're all friends in there and we had a conversation earlier today, someone said, "I'm going to do these things this week," and then later on, he came back and said, "Hey, everyone, I did these things." And every once in a while, we'll check in on each other and say, "Hey, I know you're going through this stuff. How is this affecting your goals or how is this affecting this other thing that you're working on?" And that's just the accountability side. Mentorship is really, really powerful. I've had some amazing mentors. I would consider you, Michael, in ways a mentor, especially when it comes to podcasting and developing your own system in podcasting.
 
00:25:35 Michael Kennedy: Well, thank you, yeah.
 
00:25:35 Jay Miller: I've been able to share a lot of the tools and a lot of the resources that I've gotten from you and that I learned with others so that a mentorship is not always just one way, it's not one person telling you how to do things, it's one person showing you ways to do it, you deciding whether or not you're going to do it, and then you turning back and teaching others. And one of the best things you can always do is be be accountable of your mentor. When your mentor teaches you something, let him know that you've done it and let them know how it impacted you and how it taught you things. I always thank my mentors, if I don't, it's funny, like I'll sent then tweets, like I know I haven't sent you one a few months but I really appreciate you just being there as someone to talk to as a mentor because it's helped me get to where I am today.
 
00:26:26 Michael Kennedy: Yeah, that's really awesome and I think it's super important to have that, both accountability and mentorship and sometimes a mentorship is really, really loose, right? Like I follow some guy's blog and I read his book or it could be really, really tight like you and I talking and exchanging stuff or things like that, right?
 
00:26:44 Jay Miller: Absolutely, and you can always just ask someone. Say, "Hey, I see you as a mentor. Is there any way that I can pick your brain about something every once? Or, "I'd like to get on a call with you maybe ask you some questions," or my favorite: "Hey, you're a really good mentor in this field. Why don't you come and be on my podcast and we can talk about some of these things that I've learned from you?"
 
00:27:08 Michael Kennedy: Right, that last one's interesting because it's like not just I'm asking you to help me out but I'm trying to give you something back as part of it and I think that's a really nice way to start these conversations, like let's just pick somebody's blog. I'm following somebody's blog and they're doing really great work I'm learning from it and I would like to like connect with them, you could say, "Look, I would love to be a proofreader and check all the code samples of your blog posts." If I could work with you and just do that for free, could you give me some advice on like my career or something like that, right?
 
00:27:38 Jay Miller: Definitely, and I think that's that's something that a lot of people are afraid to do. I mean I've I worked for free a lot in my life and it hurts at times where you want to actually always ask for some type of payment but if you go up front and you say, "Hey, you've already paid me in knowledge and experience, I would like to help you as payment, as sort of reciprocating that payment, and in the future, maybe we can continue a relationship "that works in both of our favors."
 
00:28:10 Michael Kennedy: Yeah, and it's often unclear how that's going to work out but I found that like giving to people and helping out people pays itself back in unexpected and wonderful ways, so I kind of think that it's just worth it and it'll figure itself out later.
 
00:28:26 Jay Miller: I mean we're all developers in an open source world. There's nothing wrong with going and looking at some open source code and saying, "Hey, I noticed there is a typo in one of your comments," and just pointing it out or even just submitting a pull request that fixes it really quick. I mean it's nice and someone goes, "Oh, yeah, I didn't notice that." I do that all the time with websites that I look. I go, hey ,I know that there's a language barrier here but this statement doesn't quite make sense in American English, perhaps you meant to say this instead.
 
00:28:55 Michael Kennedy: Right, for sure, so your next advice is to not burn the candle at both ends, which is really, there are times in life where that's really hard to do, like if you're trying to do like a side project that you maybe want to transition to, there might be some period where you are burning the candle a lot.
 
00:29:12 Jay Miller: Well, this is something that I've had to teach myself a lot lately, for the first year of Productivity in Tech, I really did this. I burnt the candle at both ends. I would wake up at four in the morning, work on Productivity in Tech, go to work at seven, come home at 5:30, eat dinner with my wife and then stay up until midnight working on Productivity in Tech again and I got really sick. I'm still recovering from being sick and I had to take a lot of time off from work. I had to have a lot of doctor's visits and in the end, I just said enough's enough, I cannot do that, not again.
 
00:29:53 Michael Kennedy: Yeah, two hours a day would've, in the end, probably actually more time on the project if you didn't have to go deal with all the stuff.
 
00:30:01 Jay Miller: Oh, absolutely, it's been proven that the more you take breaks, the better you're going to be off mentally working on tasks. Breaks allow your brain to catch up with what's going on and really start to process it. If you're just going at it 100% all the time, you're burn yourself out instantly.
 
00:30:18 Michael Kennedy: Yeah, most of the time you want to view everything as a marathon, right? One of my favorite quotes is that inspiration is perishable and I find that I work much faster, much more focused if I'm really inspired to do something. So I have these periods were like I am just driven to do a thing and I'm really into it and I will spend like 12 hours a day on it for a week or two, but you got to turn that back down, right? You can only do that for a little while.
 
00:30:51 Jay Miller: Definitely, you have to wind up just saying, hey, you know what, I'm going to take a break or I'm going to put this down, I do that a lot. I'll start working on something and I'll just get this little voice in the back of my head saying, "Hey, you worked on this long enough. Why don't you go take a break? Why don't you go spend time with your family?" And then I just get up and do it.
 
00:31:09 Michael Kennedy: Yeah, that's a good part, yeah. Yeah, for sure, and you find sometimes you come back, that thing you were stuck on is like easy. You're like, oh, why don't you do it this way? So another one that is popular in the startup space but I think has a lot of merit is fail fast and fail often.
 
00:31:25 Jay Miller: Absolutely, this is actually, I gave this advice on another podcast I was a guest on called Originality and I think since then, it's taken its own little life, I've written down on like my notebooks. I've talked to my wife about possibly tattooing it on my body. I really love this advice and because it's so true. I have failed so many times in my life and I look back and I'm so grateful for all of those failures. Before Productivity in Tech, I actually ran a blog called Keeping Junk Managed and I did that for about two years, I would write a blog post almost every single, I think I wrote, at one point, I was writing three blog posts a week and eventually, I just took it all down and I learned a easy lesson, I hate writing so it was like, hey, I failed with this, even though it was starting to grow, I felt like it was a failure but I learned an extremely valuable lesson and I've built many, many projects. I'll go, hey, I'm going to build this little project out in a weekend and I'll work on it and work on it and work on it, and at the end of the week, if it's not done, I set it down and I forget about it. And I look at it as, okay, hey, I didn't finish that but what did I gain from it?
 
00:32:42 Michael Kennedy: Yeah, for sure. You need to have these broad experiences, even if you don't make them a big thing, right? And I guess one of the takeaways is failure is seen as really, really scary. Another show that I listen to that I really like is How I Built This from Guy Raz and they interview all these people that started companies and the guy, gosh, can't remember what company it was but that's unfortunate, maybe I'll link to the episode. I can dig it back up but he said there's a difference between risky and scary. Some things are not scary but very risky. Some things are not particular scary but they're actually really, really risky and so the analogy he gave was, look, I could stay at like a pretty safe job my whole life and but I don't really like it, and I could wake up when I'm 65 and go, I spent my whole life doing something I didn't like, can you believe that, how bad is that, right? And that's not scary at any given moment but is totally risky so I think there's a lot of these things we can do that seem risky but they're really just scary and so trying these different things and have these different experiences, yeah, just embracing that for here's another experience. I'm going to get an awesome lesson from this or I'm going to have something successful let's go, right, that's great.
 
00:34:02 Jay Miller: You know, one of the things that I've always told people that I've mentored is it's only failure once you deem it a failure, and I know that kind of goes counterintuitive to the fail fast, fail often portion but if you look at the times where you fell short a little bit, if you don't look at them as failures but you look at them as just opportunities to learn from, it's not a failure and the only person that can tell you that you failed is yourself. You could only fail yourself in life.
 
00:34:31 Michael Kennedy: Yeah, that's a great point, yeah, there's definitely things I look back on where at the time, I'm like, this thing didn't work out. This is such a bummer, and when really, just, you're looking back, they look like stair steps. So another one that you talk about is doing your own thing. What do you mean by that?
 
00:34:43 Jay Miller: Oh, man, I love this one. I absolutely love this because this is kind of goes in line with specializing, if you try to emulate others in anything that you do, it will always feel like you emulated someone else. I'm not saying that you shouldn't steal like an artist. I think that it's a really great book for one, but it's a really great idea, look at what other people are doing and say, what would that look like if I'm doing it? But at the end of the day, do your own thing. I've definitely struggled to find my voice in the podcasting space because I listen to a ton of podcasts, I mean I listen to hundreds of podcasts every single week and a lot of those voices start to come out when I'm hosting an interview. But what I always try to do is say, hey, when I'm asking questions, when I'm talking with a guest, I'm doing it with my level of excitement. I'm doing it with my level of concern for my audience. I'm not trying to run a gimmick. I'm not trying to be like Gary Vaynerchuk who's just yelling at everyone and saying, "Hey, you got to get out there and just freaking do that already." I'm being myself; when someone says it's scary, I can go, I can definitely vouch for that because it is scary, I've been scared. You can't be afraid to just do your own thing and then from a technological standpoint, as developers, people appreciate you putting your spin on things.
 
00:36:15 Michael Kennedy: This portion of Talk Python to Me was brought to you by the GoCD. GoCD is an on-premise open-source continuous delivery tool to help you get better visibility into and control of your team's deployments. With GoCD's comprehensive pipeline modeling, you can model complex workflows for multiple teams with ease and GoCD's value stream map lets you track changes from commit to deploy at a glance. Say goodbye to deployment panic and hello to consistent, predictable deliveries. We all know that continuous integration is super important to the code quality of your applications. Choose the open-source local CI server, GoCD. Learn more at talkpython.fm/gocd. That's talkpython.fm/gocd.
 
00:36:59 Jay Miller: You know, I look at one of my favorite companies, Trello, who were purchased by Atlassian recently. I've actually applied to Trello and I got rejected but it was the coolest rejection ever because in the email, it talked about like rejection raptors coming in and eating up the entire human resources department and in the building burning down so unfortunately, at the moment, they couldn't hire me and I'm just like, I'm not even upset, this is awesome!
 
00:37:23 Michael Kennedy: Yeah, it's hard to be upset when you're laughing.
 
00:37:25 Jay Miller: Absolutely, but in having a unique personality to your own thing, that's what really makes stuff valuable.
 
00:37:31 Michael Kennedy: Yeah, yeah, it's certainly worth having an opinion about things and not just playing it safe all the time, for sure. So I had, a guy I worked with a long time ago, enjoyed working with him and we worked at this office and it got rearranged and we ended moving to the same office and after like the first day of working together in office, said, "Michael, you talk to yourself when you're programming a lot, that's." Like really, I'm really sorry. He's like, "No, no, that's fine but just did you know?" Like I don't even know, so you're saying we should talk to ourself, maybe I was doing all right.
 
00:38:03 Jay Miller: Absolutely, you should definitely talk yourself, not only in real life but also in your code. No one thinks like you do. No one reacts like you do, when you are going to achieve something, you have to be the one that takes yourself up and gives yourself that pep talk. When you're writing code, leave notes for yourself. Trust me, as someone who picks up projects, sets them back down and then like a year later picks them up again, it's really great to see that message that I left myself that's like, hey, this probably isn't the best way to do this. You might want to look at refactoring this down the road. And there's nothing wrong with that. Now maybe in your production code, you might want to clean that up a bit but at the same time, it's really important that you keep a line of communication with yourself and the biggest reason for that is if you don't, you'll wind up hearing everyone's voice but your own.
 
00:38:54 Michael Kennedy: Yeah, that's really good advice, that's cool. So another thing you propose that we should learn from outside the realm of our development, projects and things like that, right?
 
00:39:05 Jay Miller: Absolutely, I mean learn from outside of your own realm, like one of my favorite conversations in the PIT Podcast was I interviewed someone who was a productivity coach but she was also a trapeze artist and where does that come from? Like what lessons can you learn from someone who walks on a high wire . That's absolutely phenomenal. But when you start to think outside the box, you start to get results that are outside the box and when people see that, they get inspired like--
 
00:39:35 Michael Kennedy: Yeah, I'm sure it give you some really interesting, yeah, for sure it does, yeah, that's awesome. So merge your passions, so that's kind of, well, what would you mean my merge your passions? It sounds great but I won't put words in your mouth.
 
00:39:47 Jay Miller: So, for me, merging my passions are combining the things, I have you talks or a few proposals that I've put out about this actually. For me, I have a few passions, obviously, the tech side, obviously, the productivity side, but I also love working in communities. Ever since I've started learning to be a a developer, I've gotten involved in communities and I said, you know what, why don't I merge the two of these things? Why don't I start developing for communities? One of the first projects I ever put out is an app called Shownoter, is a little web app that I built and I built it with the intention to help one of the online communities that I was a part of. We were having a problem keeping notes. We were basically putting a bunch of comments inside of like a Google Hangout that we did once a week and there would be a ton of links in there of valuable information and I was like you know what? I can build an app that sifts through all of this text and just finds those links and shares those. So it turned into a full project but I couldn't be afraid to say, hey, I know I want to be a community manager. I know I want to be a developer, why don't I just build stuff for community managers? That works because then I get to use what I made .
 
00:40:58 Michael Kennedy: Yeah that's a really cool way to look at it. A lot of times people want to advance their careers by doing something outside of what they do at their regular 9-5 and I often say, look, go find something you care a lot about and just go build that. It doesn't have to be successful. It doesn't have to be commercial but find something that you care about and bring your programming talents to it.
 
00:41:22 Jay Miller: One of the I guests that I've had on the show, his boss got him into skeet shooting and they had this issue to where their skeet shooting machine was broken and you couldn't get it repaired and he said you know what, what if we just built our own? So they actually built their own skeet shooting, like, clay tosser and they built an app for it that you could control when and where it threw the clay pigeons and I was just fascinated because I had never thought of merging programming with skeet shooting.
 
00:41:53 Michael Kennedy: That's awesome, I've never thought of that as being a technical thing either. Like you put it in there and sometime later, it flings it out, right?
 
00:41:59 Jay Miller: Exactly. It's like it rotates on 360 access so it can literally throw in any direction and you have your friends and you can keep score. It's like all of these different things that, I get excited just talking about it and I'm not an avid skeet shooter so for me, when you go out and you do your own thing and you merger passions like that, when you combine all of these things that we've talked about, what happens is not only do you get excited about the things that you're doing but other people get excited about them.
 
00:42:29 Michael Kennedy: Yeah, that's right, you definitely already have this built-in community around whatever you're passionate about, that's cool, all right, so that is a bunch of good advice for people to be more productive and more focused and really kind of inspired, which like I said, I think is really the key for a lot of this kind of stuff. Let's talk about some of the tools that you used. You said that actually pen and paper is one of your main gotos.
 
00:42:53 Jay Miller: Absolutely, I'm a little pen-and-paper fanatic. I think that came more and more with the Sketchnoting side. I've been on a few podcasts about Bullet Journaling and analog productivity. The thing that I about it is it's so diverse. There are very few apps were you can have a task list, a bunny drawing, a note to yourself, and then a bunch of just weird things that you found and collected over the ages, like my notebook has 32 yen on it from where I lived in Japan, so every time I pull out my notebook, I immediately go back to the three years that I spent in Okinawa. And I get to play around with fountain pens and try out different paper and it takes my mind away from the arduous task that I'm working on at the moment.
 
00:43:45 Michael Kennedy: I think it's interesting to work with pen and paper. I don't do it very often, maybe a lot of times when I'm on a plane or I'm somewhere kind of isolated and I'm not necessarily on the internet but I find it to be helpful because I can't get easily distracted. I'm sort of forced to think my thoughts and then get it out, whereas if I do it in, say, Google Docs, it's like oh, notification, notification. Oh, you know that one thing I should've done? And that reminds me of this and oh, geez, I better, right? It's easy to get distracted with other tools. They're great but it's hard.
 
00:44:19 Jay Miller: Absolutely. And the other, if you wanted to use an app, the one out that I do lot is TaskPaper and I like it for that exact reason is it feels more paper it's, you're not getting hit with notification after notification. I have anxiety issues so whenever I start getting little blitzes that say, hey, you need to go do this and then you need to do this and you need to do this, that makes me really anxious but when I control my list, and I go, okay, what do I need to do and then I just write it down, whether it's in TaskPaper or on pen and paper and then I just look at just that. I don't have to think about anything outside. I don't have to worry about random pop-ups and every once in a while, someone will call and say, "Hey, you're supposed to do this thing," and I go, okay, I'll add it to my list and just leave it at that.
 
00:45:08 Michael Kennedy: Right, yeah, that's awesome, pretty cool, so TaskPaper sounds great. Another one that I like is called Liquid Paper and that's just fantastic if you're learning something written. It lets you, especially if you have an Apple pencil but you can do with your fingers as well. It lets you highlight and circle and call out little sections of really long PDFs and things. That's definitely a recommendation from me, very cool. So let's talk about some of the podcast episodes. Your last one was with Tom Merritt, right?
 
00:45:38 Jay Miller: Yeah, at that time we're recording this, the last guest that I had was--
 
00:45:41 Michael Kennedy: That's right, time shifting.
 
00:45:42 Jay Miller: Was Tom and he is definitely someone that I've looked up to for a long time. As I mentioned before, I listen to a lot of podcasts. I think that was what gave me the idea to start my own but one of the very first podcasts I started listening to was Tom's with the Daily Tech News Show and since then, I've been a fan of that, I've been a fan of some of his other work as well and I never thought he would be on the show but one day, they were having a conversation and he started talking about his own productivity system, so then I had to email him 'cause I was just hoping he would read my comments but it was mostly saying, hey, Tom, you're doing a great job and then he replied back and said, "Hey, thanks, that was awesome," and then I go, well, I do run this show. I'd love to have you on and to talk more about this and--
 
00:46:28 Michael Kennedy: Yeah, that's cool.
 
00:46:28 Jay Miller: And he's had such a great legacy, several shows. He's been on several different networks and currently, Daily Tech News Show and a lot of his other shows are doing some really fascinating things.
 
00:46:41 Michael Kennedy: Yeah, Daily Tech News Show is really great, so Tom hosts Daily Tech News Show. And if you guys are looking for a non-developer, just general tech space, like give me the quick news of the day, 15 minutes sort of conversation, I can totally recommend that show. That's a great one, actually, it was somewhat inspired to start Python Bytes from that 'cause I'm like, why don't we have something this? 'Cause DTNS is really, really great, but he does a bunch of podcasts and he writes books and he does all sorts of things so there's a lot of cool lessons to learn from listening to that episode. What other ones would you recommend people check out?
 
00:47:16 Jay Miller: Well, from my shows, that's so tough. I've had so many great guests and right now, I'm kind of cheating and I'm going to go to my website and look at some of those names. There was this one guy named Michael Kennedy, he did really good on the show. I really enjoyed his.
 
00:47:32 Michael Kennedy: Thank you.
 
00:47:34 Jay Miller: But just looking through this, I've had Brett Terpstra on the show, a lot of people he's internet famous so I think there's a drinking game named after him. I enjoyed talking with him because he's a very realistic person and he's also a mad scientist. He does a lot of little projects that are really cool. But other than that, I mean I'm scrolling through these and there's so many great people in here.
 
00:47:58 Michael Kennedy: People asking these questions as well and it's always like, well, which one of your kids is prettier or something like that, right? It's hard to say, but yeah.
 
00:48:06 Jay Miller: Exactly, exactly, I would say the one right before Brett, too, Kenneth Rotter, he hosts the, what is it called? The Dumbbells &amp; Dragons Podcast and this is where I was really inspired by the do your own thing, just really just embrace your own thing. He loves working out; he loves nerd culture. He loves Sigourney Weaver, they did a whole series on the Aliens sequence of movies. And having conversations with him came at a very, very difficult time for me. I was struggling with a lot of social anxiety stuff and I felt I couldn't become that real developer and then I got him on the line and learned that like, okay, I can just be myself and if that means I'm not a real developer, as long as I'm having fun, that's what really counts.
 
00:48:55 Michael Kennedy: Yeah, I think if you're building things, it doesn't have to be what you necessarily do day to day but I think you are as well for sure. That's cool, let's go back to your always be learning part, and a big part of that is reading, right? So you're an avid reader and I know there's a bunch of books that developers could, should maybe read for this kind of stuff, what do you got in mind for that?
 
00:49:18 Jay Miller: So I have a few development books that are sitting on my shelf, I think I've cracked the spine on a couple of them so I can't really give you the best advice on development books but I can tell you of some really good books that I've read that can just help you in life in general. And one of my most recent really, really, really good books is How to be Everything and this is by Emilie Wapnick and this is where the idea of being yourself and merging your passions came from. Emilie is what she would call a multi-potential-ite, which means that she could really be doing a couple of things and she likes doing those things. I'm the same way; I've already mentioned it before. I could just be doing podcasting full time. I could be a full-time developer. I could be a full-time community manager but I find ways to kind of combine these things and I learned that little tip from Emilie's book.
 
00:50:14 Michael Kennedy: Yeah, that sounds really cool. I haven't read that one by have read some of the next one you have up for us with The Accidental Creative.
 
00:50:21 Jay Miller: Yes, this book was phenomenal. I think that I like Todd Henry's books, Die Empty and Louder Than Words, I think, is the other one. I haven't read that one yet but The Accidental Creative was the first book I read by Todd and even at the end when he just wraps it up of like don't be a cover band; do your own thing, kind of like as you can tell, a lot of these lessons that I pick up, they're not there not from me but he really does show like, hey, think about things outside what you're doing them, think about how can this translate to other areas of your life. Think about the things that you don't want to be doing and what can you gain from them that makes the experience overall more pleasant.
 
00:51:00 Michael Kennedy: Yeah, absolutely, I think creativity definitely at least in the sense of that book and not necessarily the traditional art major-type creativity but the creativity that a lot of people have in their work, I think it's undervalued or maybe underdeveloped, right? Like we don't spend enough time just focusing on being creative problem solvers and creative thinkers so it's good to remind you to do that.
 
00:51:27 Jay Miller: Absolutely.
 
00:51:27 Michael Kennedy: Yeah, so the next one is how to be positive when telling people no, I'm too busy.
 
00:51:32 Jay Miller: Yeah, The Power of Positive No by William Ury is, it's an older book, he's actually written some other really good books that I highly suggest you check out but this one really helped, especially if you're dealing with social anxiety. If you feel you have to please everyone, I would highly recommend reading this book. William is someone who he's been a negotiator. He's negotiated a lot of peace treaties. He's negotiated international conflicts. He's sat down with the people that were involved in the Cuban Missile Crisis, so he brings a lot of knowledge in and really teaches you how to develop this system around saying no and really unlock the things that you want to say yes to and really having the power to do that. It's called The Power of a Positive No for a reason. Once you learn some of these techniques, you start to realize like, wow, I didn't even know I could do that.
 
00:52:25 Michael Kennedy: Yeah, that's interesting. I feel a lot of times, people miss opportunities 'cause they combine, they're like, "Ah, I'm so busy. I can't deal with this," right? Like I would love to go to that but I've got X, Y and Z, and so this sounds like it might keep a little slack in the system for that.
 
00:52:39 Jay Miller: It definitely does.
 
00:52:42 Michael Kennedy: Yeah, nice, the next one's about running. I think you can learn a lot of life lessons from these types of endurance things.
 
00:52:48 Jay Miller: Yeah, and this book, What I Talk About When I Talk About Running by Haruki Murakamiby. I picked this book up years ago and never read it and then I finally sat down earlier this year to read it and was mad at myself for waiting so long. Haruki is an author, he's a fiction writer, and I've read several of his fiction books. He's one of my favorite fiction writers but in this, he talks about the life that he has outside of writing, which is he's a marathon runner and he does this every day and it teaches you a lot about the power of creating a habit and really having that habit work for you. We can't be developers 24/7. I know some of us try. But we cannot be developers 24/7 and when we do these other things, kind of like what Ken Rotter was doing with we're going to the gym or joining a D&amp;D group or reading a good book. When you do these things, it really helps not just with your mental health and your physical health but it also helps on the development side because it helps keep your brain engaged in learning different things.
 
00:53:53 Michael Kennedy: Yeah. That sounds interesting and the last one. What's this last one here?
 
00:54:00 Jay Miller: So the last one is a fiction book. I've always been fascinated with the counter-revolution that happened in China about 100 years ago at this point but this book is called Balzac and the Little Chinese Seamstress. It's by a Chinese French author named Dai Sijie and I've read this book once a year for the past five years. I'm actually about to come up to the point where I'm going to read it again for this year and it's just really beautiful story. And it takes place in the ancient villages of China. For those that don't know about that the counter-revolution, what Emperor Mao used to do was he would take some of the smartest people, the doctors, the politicians, the activists, the lawyers and he would take their children and put them in a re-education system where they would send them to these remote, well, not islands but these remote villages where there were maybe 20 people and there was no electricity and no television and no radios and anything else and in the book, they even, they become fascinated with an alarm clock because it allows them to wake up on time early without having to ignore, without sleeping in. I don't know, every time I read this book, I just, I look at my life and I just think about how good I have it because I grew up in an era that I did not have to deal with some of these things and as an African-American, as a minority in the tech space, there are a lot of issues that are out there and I look at those issues and I acknowledge them but I continue to push myself regardless because I know that it could definitely be worse.
 
00:55:33 Michael Kennedy: Yeah, that's a really interesting set of life lessons in there, that's cool and I love the lesson that you're taking from it, that's great, so I actually have two books that I want to throw onto the list here. These are not your books but mine and I recently read them. I thought they are just incredible and related to this. One was a biography of Elon Musk; it's called Elon Musk: Tesla, SpaceX, and the Quest for a Fantastic Future. And just reading what Elon Musk has done and continues to do makes you feel like, oh my gosh, I've got to get out there and do something because he's starting a space company, a car company, a solar company. You're just like you read about the passion and the drive and the focus and it's like you can't help but want to go do more, so that's really cool. And then the other one is a surprising book I ran across somewhere right before I jumped on a plane called Hustle: The Life-Changing Effects of Constant Motion and this guy, Jesse Tevelow, wrote this book and basically, he's been working on productivity, focus, creativity-type things, creating things in the creative space and super relevant for people in development and projects like that and it really touches on a lot of cool things, basically inspires you to keep moving, always take a step forward, always get at least some progress on whatever your real important goals are, it's great.
 
00:56:58 Jay Miller: Absolutely, and I think that a lot of developers are afraid to embrace their creative side. I mean there's, we're supposed to think logically and analytically but really, we're creative. I mean it takes creativity to build a website. I mean, sure, you can follow a template but that's boring and you want to make it your own thing and you try all these new things and the only way you get to those things that I truly being creative.
 
00:57:24 Michael Kennedy: Yeah, the surprising thing about I think programming is you think of all these rules and you've got to follow what the programming language is and the API sort of box us in to but once those boxes and that space is built, then it's just full of creative problem-solving and creative thinking and it's a really wonderful space so definitely important. So Jay, we're getting short on time, getting near the end of the show so you mentioned your course. Why don't you tell everybody what you're up to with your course.
 
00:57:52 Jay Miller: So my upcoming course is called Learn to Say No. It is designed for people like us, like developers, to learn how to embrace no, kind of like what The Power of a Positive No was saying. However, this comes from a position specifically in tech. We're going to be talking about saying no to yourself when you want to stay up late and burn the candle at both ends, saying no to your boss when they want to add a ton of work onto your project and take things off the rails and saying no to being that resident IT guy for your family, or girl. But ultimately, we're learning to say no so we can eventually say yes and say yes to the things that we want to do the things that are going to continue to empower us but you can't get a yes before you get to no. And I've learned a lot just preparing for this course and I think a lot of people are going to learn from it as well.
 
00:58:47 Michael Kennedy: Nice, if people are interested, how do they find out when it comes out?
 
00:58:51 Jay Miller: So we do have a landing page up, if you get go to productivityintech.com, if it's your first time visiting the site, you're going it'll pop-up at the top of the screen that says, learn about our upcoming course. And if you click on that, you can sign up for our waiting list. In there, I will send you some sneak peeks down the road but I'll also will let you know the status of where I'm at with the course and when I expect to come out. Right now, we don't have a release date at the time of recording but the plan is to have it out by the end of the year.
 
00:59:18 Michael Kennedy: All right, sounds cool. All right, we're going to have to leave it there for the topics, so let me ask you the two questions. So if you're going to write some Python code, what editor do you open up?
 
00:59:27 Jay Miller: It really just depends. When we first started preparing for this conversation, it was one thing and now it's another one. I normally use Adam or I'll use Vim for quick fixes but Sublime Text 3 just came out so I'm giving that a shot and I like it, there's a lot of cool things about it.
 
00:59:44 Michael Kennedy: Oh, that's really cool, I'll have to go check that out. I haven't even noticed, it's awesome. And notable PyPI package?
 
00:59:51 Jay Miller: I love Requests, and I love Requests because I am always trying to connect to an API. I'm always like, for some reason, constantly pulling in traffic. Beautiful Soup would definitely be a close second because that's where, those were like the two big packages that I used when I first started developing in Python but yeah, at this point, Beautiful Soup, not as much but I still use Requests in almost every single project I have.
 
01:00:21 Michael Kennedy: Yeah, that the project is, of course, one of, if not the most popular PyPI packages but it really captures the essence of the Import Anti-Gravity Case XD, XED comic so it's great, all right, so final call to action, people want to be more productive, what should they do?
 
01:00:41 Jay Miller: So I would highly suggest that you center yourself around a community. Don't think that you have to be productive on your own. Don't think that you have to try to make a bunch of life changes all on your own and when you fail, don't get discouraged and feel like you're just a massive failure. Instead, get out, get involved in a community. I happen to know one called the Productivity in Tech Premium Group, it is a paid-for group. But the reason that we pay for it is because we want everybody in there to feel like they have to contribute to the community and they have to grow with each other and it really has created a lot of amazing things. A lot of life changes have happened in that group that I don't think would've happened. I've had people say, "I was afraid to do this thing until I joined this community and I had people cheering behind me saying, 'Hey, you can do this. 'You can do this, you can do this,' and in the end, I did." So don't do it on your own. Get involved; get plugged into a community. If you want to join the Productivity in Tech community, start by listening to the podcast first to make sure that we're going to provide you what you need and then go to productivityintech.com/premium/talkpython and I'm going to give you 2/3 off for life, so instead of paying the $30 a month, you only have to pay $10 a month and that is for the life of your membership.
 
01:02:06 Michael Kennedy: Yeah, that's really cool. That's a nice project you got going there. It definitely helps to have someone who's sort of at your level trying to solve the same problems or work on the same types of things or reach the goals that you are. So I have people that I meet up with weekly or every other week or something like that and we could share and exchange notes and see how we're doing and keep each other motivated, so yeah, very cool. All right, Jay, thanks for being on Talk Python, it's been great to chat with you and catch up with you on all these topics, and suggestions are great.
 
01:02:38 Jay Miller: Absolutely, and I plan on keeping you as a recurring member on my podcast as well, so be on the lookout for another invite.
 
01:02:45 Michael Kennedy: Sounds good, thanks, talk to you later. This has been that episode of Talk Python to Me. Today's guest was Jay Miller and this episode has been brought to buy Linode and GoCD. Linode is bulletproof hosting for whatever you're building with Python. Get your four months free at talkpython.fm/linode. Just use the code python17. GoCD is the on-premise open-source continuous delivery server, want to improve your deployment workflow but keep your code and builds in house? Check out GoCD at talkpython.fm/gocd and take control over your process, Are you or a colleague trying to learn Python? Have you tried books and videos that just left you bored by covering topics point by point? Well, check on my online course, Python Jumpstart by Building 10 Apps at talkpython.fm/course to experience a more engaging way to learn Python and if you're looking for something a little more advanced, try my Write Pythonic Code course at talkpython.fm/pythonic. Be sure to subscribe to the show. Open in your favor pod catcher and search for Python. We should be right at the top. You can also find iTunes feed at/iTunes, Google Play feed at /play, indirect RSS versus feed /rssontalkpython.fm, this is your host Michael Kennedy. Thanks so much for listening. I really appreciate it. Now, get out there and write some Python code.
 
